{"version":3,"sources":["Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todos","checkboxHandler","className","id","onChange","checked","completed","type","class","name","date","time","TodoList","map","App","useState","setTodos","todoRef","useRef","d","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","listener","event","code","document","addEventListener","removeEventListener","addHandler","e","current","value","prev","uuidv4","onKeyDown","key","ref","defaultValue","onClick","undoneTodos","filter","todo","newTodos","clickedBox","find","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4KA2BeA,MAzBf,YAA2C,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBAIrB,OACE,gCACE,wBAAOC,UAAU,OAAjB,UACE,uBACEC,GAAG,WACHC,SARR,WACEH,EAAgBD,EAAMG,KAQhBE,QAASL,EAAMM,UACfC,KAAK,aAEP,mBAAGC,MAAM,WAAT,SAAqBR,EAAMS,UAG7B,sBAAKD,MAAM,gBAAX,UACE,sBAAML,GAAG,OAAT,SAAiBH,EAAMU,OAEvB,sBAAMP,GAAG,OAAT,SAAiBH,EAAMW,cCFhBC,MAhBf,YAA+C,IAA3BZ,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBACzB,OACE,qBAAKC,UAAU,gBAAf,SACGF,EAAMa,KAAI,SAACb,GACV,OACE,cAAC,EAAD,CAEEA,MAAOA,EACPC,gBAAiBA,GAFZD,EAAMG,U,QC0FRW,MA9Ff,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNf,EADM,KACCgB,EADD,KAEPC,EAAUC,mBAEVC,EAAI,IAAIC,KACRV,EAAOS,EAAEE,UAAY,KAAOF,EAAEG,WAAa,GAAK,IAAMH,EAAEI,cACxDZ,EAAOQ,EAAEK,WAAa,IAAML,EAAEM,aAAe,IAAMN,EAAEO,aAC3DC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,UACpDhB,EAASY,KACR,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUlC,MAC5C,CAACA,IAEJ2B,qBAAU,WACR,IAAMQ,EAAW,SAACC,GACG,UAAfA,EAAMC,MAAoBD,EAAMC,MAItC,OADAC,SAASC,iBAAiB,UAAWJ,GAC9B,WACLG,SAASE,oBAAoB,UAAWL,MAEzC,IAEH,IAAMM,EAAa,SAACC,GAClB,IAAMjC,EAAOQ,EAAQ0B,QAAQC,MAC7B5B,GAAS,SAAC6B,GACR,MAAM,GAAN,mBACKA,GADL,CAEE,CACE1C,GAAI2C,cACJrC,KAAMA,EACNH,WAAW,EACXI,KAAMA,EACNC,KAAMA,QAIZM,EAAQ0B,QAAQC,MAAQ,IA0B1B,OACE,sBAAK1C,UAAU,MAAf,UACE,2CACA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACE6C,UAZa,SAACL,GACR,UAAVA,EAAEM,KACJP,KAWMtC,GAAG,YACH8C,IAAKhC,EACLiC,aAAa,GACb3C,KAAK,SAEP,wBAAQ4C,QAASV,EAAjB,sBACA,wBAAQU,QA7BK,WACnB,IACMC,EADQ,YAAOpD,GACQqD,QAAO,SAACC,GAAD,OAAWA,EAAKhD,aACpDU,EAASoC,IA0BH,wBACA,wBAAQD,QAxBQ,WACtBnC,EAAS,KAuBH,0BAEF,cAAC,EAAD,CAAUhB,MAAOA,EAAOC,gBAvCN,SAACE,GACvB,IAAMoD,EAAQ,YAAOvD,GACfwD,EAAaD,EAASE,MAAK,SAACH,GAAD,OAAUA,EAAKnD,KAAOA,KACvDqD,EAAWlD,WAAakD,EAAWlD,UACnCU,EAASuC,SAqCP,qBAAKpD,GAAG,YAAR,SACsD,IAAnDH,EAAMqD,QAAO,SAACC,GAAD,OAAWA,EAAKhD,aAAWoD,OAAxC,UACM1D,EAAMqD,QAAO,SAACC,GAAD,OAAWA,EAAKhD,aAAWoD,OAD9C,qBAEG,gCCjFGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,SAM1BZ,K","file":"static/js/main.e4dd6a7e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nfunction Todo({ todos, checkboxHandler }) {\r\n  function handleCheckbox() {\r\n    checkboxHandler(todos.id);\r\n  }\r\n  return (\r\n    <div>\r\n      <label className=\"Todo\">\r\n        <input\r\n          id=\"checkbox\"\r\n          onChange={handleCheckbox}\r\n          checked={todos.completed}\r\n          type=\"checkbox\"\r\n        />\r\n        <p class=\"todoName\">{todos.name}</p>\r\n      </label>\r\n\r\n      <div class=\"dateContainer\">\r\n        <span id=\"date\">{todos.date}</span>\r\n\r\n        <span id=\"time\">{todos.time}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ todos, checkboxHandler }) {\r\n  return (\r\n    <div className=\"todoContainer\">\r\n      {todos.map((todos) => {\r\n        return (\r\n          <Todo\r\n            key={todos.id}\r\n            todos={todos}\r\n            checkboxHandler={checkboxHandler}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import TodoList from \"./TodoList\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoRef = useRef();\n\n  const d = new Date();\n  const date = d.getDate() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getFullYear();\n  const time = d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(\"LSKEY\"));\n    setTodos(storedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"LSKEY\", JSON.stringify(todos));\n  }, [todos]);\n\n  useEffect(() => {\n    const listener = (event) => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  const addHandler = (e) => {\n    const name = todoRef.current.value;\n    setTodos((prev) => {\n      return [\n        ...prev,\n        {\n          id: uuidv4(),\n          name: name,\n          completed: false,\n          date: date,\n          time: time,\n        },\n      ];\n    });\n    todoRef.current.value = \"\";\n  };\n\n  const checkboxHandler = (id) => {\n    const newTodos = [...todos];\n    const clickedBox = newTodos.find((todo) => todo.id === id);\n    clickedBox.completed = !clickedBox.completed;\n    setTodos(newTodos);\n  };\n\n  const clearHandler = () => {\n    const newTodos = [...todos];\n    const undoneTodos = newTodos.filter((todo) => !todo.completed);\n    setTodos(undoneTodos);\n  };\n\n  const clearAllHandler = () => {\n    setTodos([]);\n  };\n\n  const keyDownHandler = (e) => {\n    if (e.key === \"Enter\") {\n      addHandler();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>TODO LIST</h1>\n      <div className=\"checkList\">\n        <div className=\"buttonContainer\">\n          <input\n            onKeyDown={keyDownHandler}\n            id=\"nameInput\"\n            ref={todoRef}\n            defaultValue=\"\"\n            type=\"text\"\n          />\n          <button onClick={addHandler}>Add Todo</button>\n          <button onClick={clearHandler}>Clear Done</button>\n          <button onClick={clearAllHandler}>Clear all</button>\n        </div>\n        <TodoList todos={todos} checkboxHandler={checkboxHandler}></TodoList>\n      </div>\n      <div id=\"todosLeft\">\n        {todos.filter((todo) => !todo.completed).length !== 0\n          ? `${todos.filter((todo) => !todo.completed).length} Todos left to do`\n          : \"Your schedule is clear!\"}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}